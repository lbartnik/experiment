% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{graph_to_steps}
\alias{graph_to_steps}
\alias{commit_to_steps}
\alias{introduced_in}
\title{Transform a graph of commits into a graph of steps.}
\usage{
graph_to_steps(graph)

commit_to_steps(commit, objects)

introduced_in(graph, id)
}
\arguments{
\item{graph}{Object returned by [graph()].}

\item{commit}{A [commit()] object.}

\item{objects}{Filter for objects present in the commit.}

\item{id}{Identifier of a commit in `graph`.}
}
\value{
Object of S3 class `steps`.

`commit_to_steps` returns a `list` of `steps` and `links`.

`introduced_in` returns a `character` vector.
}
\description{
A step is an introduction of a new object or a new plot to the
session. Graph of steps is easier to read for humans than a graph of
commits becase only the relevant (new) information is shown in each
node of the graph. Thus, translating from commits to steps is the
first step to visualize the history stored in commits.

`commit_to_steps` generates a `list` with two elements:
* `steps` with a separate entry for each variable/plot that matches
  the `objects` filter
* `links` which defines links (graph edges) between `steps`

`introduced_in` generates the filter for
`commit_to_steps`'s `objects` parameter. It does it by comparing the
contents of the commit `id` against the contents of its parent.
}
\details{
`graph_to_steps` is the main function that orchestrates the
transformation.
}
