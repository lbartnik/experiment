% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R, R/query.R
\name{graph_to_steps}
\alias{graph_to_steps}
\alias{commit_to_steps}
\alias{introduced_in}
\alias{read_objects}
\alias{find_root_id}
\alias{format_expression}
\alias{description}
\alias{reduce_steps}
\alias{remove_step}
\alias{verify_step}
\title{Transform a graph of commits into a graph of steps.}
\usage{
graph_to_steps(graph)

commit_to_steps(commit, objects)

introduced_in(graph, id)

read_objects(s, store)

find_root_id(g)

format_expression(code)

description(object)

reduce_steps(s, dots, store)

remove_step(s, id)

verify_step(step, dots, parent_env, store)
}
\arguments{
\item{graph}{Object returned by [graph()].}

\item{commit}{A [commit()] object.}

\item{objects}{Filter for objects present in the commit.}

\item{id}{Identifier of a commit in `graph`.}

\item{s}{Graph of steps, see [experiment::graph_to_steps].}

\item{store}{Object store to read tags from [storage::os_read_tags].}

\item{dots}{Keep nodes that meet these conditions, see [lazyeval::dots].}

\item{step}{Step to be verified.}

\item{parent_env}{Evaluate `dots` in environment descending from this one.}

\item{id}{Identifier of object to be removed.}
}
\value{
Object of S3 class `steps`.

`commit_to_steps` returns a `list` of `steps` and `links`.

`introduced_in` returns a `character` vector.

`reduce_steps` returns a reduced steps graph derived from `s`.

`remove_step` returns a reduced steps graph derived from `s`.

`verify_step` returns `TRUE` if `step` meets the criteria and
        `FALSE` otherwise.
}
\description{
A step is an introduction of a new object or a new plot to the
session. Graph of steps is easier to read for humans than a graph of
commits becase only the relevant (new) information is shown in each
node of the graph. Thus, translating from commits to steps is the
first step to visualize the history stored in commits.

`commit_to_steps` generates a `list` with two elements:
* `steps` with a separate entry for each variable/plot that matches
  the `objects` filter
* `links` which defines links (graph edges) between `steps`

`introduced_in` generates the filter for
`commit_to_steps`'s `objects` parameter. It does it by comparing the
contents of the commit `id` against the contents of its parent.

`read_objects` reads every object/plot and fills in the
`contents` or `desc`ription. It is particularly useful when initial
`steps` graph has been read without objects' contents, e.g. in
[query_by].

`find_root_id` searches for the single commit
in the graph without a parent.

`format` prepares the expression for display
in a HTML page.

`description` format the expression for display
in a HTML page.

`reduce_steps` reduces the graph of steps according to
conditions specified in `dots`.

`remove_step` removes a single step from graph of steps
`s` and updates links accordingly.

`verify_step` checks whether `step` meets the condition
defined in `dots`. It evaluates `dots` in an environment that has
`parent_env` as its parent. Object tags are read from `store`.
}
\details{
`graph_to_steps` is the main function that orchestrates the
transformation.
}
