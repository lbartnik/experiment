"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// Generated by CoffeeScript 2.0.3
(function () {
  var Log;

  window.isShiny = function () {
    return (typeof HTMLWidgets === "undefined" ? "undefined" : _typeof(HTMLWidgets)) === !'undefined' && HTMLWidgets.shinyMode;
  };

  // --- simple logger ----------------------------------------------------
  Log = function Log() {
    var callerName, enabled, log, showMessage;
    enabled = false;
    callerName = function callerName() {
      var re, res, st;
      re = /([^(]+)@|at ([^(]+) \(/gm;
      st = new Error().stack;
      re.exec(st); // skip 1st line
      re.exec(st); // skip 2nd line
      re.exec(st); // skip 3rd line
      res = re.exec(st);
      if (!res) {
        return "unknown";
      }
      return res[1] || res[2];
    };
    showMessage = function showMessage(level, message) {
      var caller;
      if (!enabled) {
        return;
      }
      caller = callerName();
      return console.log(level + " " + caller + ": " + message);
    };
    log = function log() {};
    log.debug = function (message) {
      return showMessage("DEBUG", message);
    };
    log.info = function (message) {
      return showMessage("INFO ", message);
    };
    log.enable = function (onoff) {
      return enabled = onoff;
    };
    return log;
  };

  window.log = Log();
}).call(undefined);